<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd

     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd
     ">


    <!--<bean id="cartService" class="com.neuedu.service.impl.CartServiceImpl">
        <property name="cartDao" ref="cartDao"></property>
    </bean>

    <bean id="cartDao" class="com.neuedu.dao.impl.mybatis.CartDaoMybatisImpl"></bean>-->



    <!--扫包-->
    <context:component-scan base-package="com.neuedu"></context:component-scan>
    <!--加载属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!-- c3p0带有连接池的数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--基于xml集合spring-mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:com/neuedu/map/*Mapper.xml"></property>
        <property name="dataSource" ref="dataSource"></property>

    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" index="0"></constructor-arg>
    </bean>


    <!--开启aspectj注解-->
    <!--<aop:aspectj-autoproxy></aop:aspectj-autoproxy>-->

    <!--配置spring事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--开启基于注解的事务管理-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

    <!--配置事务切面-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
        &lt;!&ndash;配置事务属性（隔离级别  传播行为  只读状态  超时）&ndash;&gt;
        <tx:attributes>
            <tx:method name="*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"></tx:method>
        </tx:attributes>
    </tx:advice>-->

    <!--aop-->
    <!--<aop:config>
        <aop:pointcut id="myPointcut" expression="execution(* com.neuedu.service.impl.AccountServiceImpl.transfer(String,String,double))"></aop:pointcut>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"></aop:advisor>
    </aop:config>-->

</beans>